<?php
/**
 * @file
 * Profie Switcher Module
 */


/**
 * Implements hook_menu().
 */
function profile_switcher_menu() {
  $items = array();

  $items['admin/config/development/profile-switcher'] = array(
    'title' => 'Profile Switcher',
    'description' => '',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('profile_switcher_admin_settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}


/**
 * Builds the profile_switcher admininstration settings form.
 */
function profile_switcher_admin_settings($form, &$form_state) {
  $form = array();

  $options = array();
  $profiles = profile_switcher_find_profiles();

  foreach ($profiles as $profile) {
    $profile_display_name = ucfirst($profile->name);
    $options[$profile->name] =  t($profile_display_name);
  }

  $current_profile = backdrop_get_profile();
  $profile_display_name = $options[$current_profile];

  if ($current_profile == 'standard' || $current_profile == 'minimal') {
    $status = t('You are currently using the <em>@profile</em> profile.', array('@profile' => $profile_display_name));
  }
  else {
    $status = t('You are currently using the <em>profile</em> profile.  Any modules not included in the profile
    you switch to or modules not listed in the <em>/modules</em> directory will be disabled. If the <em>Profile Switcher</em>
    module gets disabled after switching to the new profile, you will need to re-enable it in order to switch
    back.', array('@profile' => $profile_display_name));
  }

  $form['profile_switcher_status'] = array(
    '#markup' => $status,
  );

  $form['profile_switcher_profile_old'] = array(
    '#type' => 'hidden',
    '#default_value' => $current_profile,
  );

  $form['profile_switcher_profile'] = array(
    '#type' => 'select',
    '#title' => t('Profile'),
    '#options' => $options,
    '#default_value' => $current_profile,
    '#description' => t('List of profiles currently present in the <em>/core/profiles</em> directory.'),
  );

  $form = system_settings_form($form);
  $form['#submit'][] = 'profile_switcher_admin_settings_submit';
  $form['actions']['submit']['#value'] = t('Switch Profile');
  return ($form);

}

/**
 * Builds the profile_switcher administration settings form.
 */
function profile_switcher_find_profiles() {
  //
  return file_scan_directory(BACKDROP_ROOT . '/core/profiles', '/\.profile$/', array('key' => 'name'));
}

/**
 * custom
 */
function profile_switcher_admin_settings_submit($form, &$form_state) {

  $new_profile = $form['profile_switcher_profile']['#value'];
  $old_profile = $form['profile_switcher_profile_old']['#value'];

  if ($new_profile == $old_profile) {
    $old_profile = FALSE;
  }
  config_set('system.core', 'install_profile', $new_profile);

  $new_status = db_query('SELECT status FROM {system} WHERE name = :name', array(':name' => $new_profile))->fetchField();

  if (empty($new_status)) {

    // Unlike modules, profiles aren't added to the system table just because the
    // files are added to /profiles.  They are added after they are active.  We
    // need to add them before that so they are BOTH active and enabled.

    // Cache a fully-built schema.
    backdrop_get_schema(NULL, TRUE);
    system_rebuild_module_data();

    // Flush all caches to ensure that any full bootstraps during the installer
    // do not leave stale cached data, and that any content types or other items
    // registered by the install profile are registered correctly.
    backdrop_flush_all_caches();

  }

  if (!$new_status) {
    $new_profile_activated = db_update('system') // Table name no longer needs {}
    ->fields(array(
      'status' => 1,
    ))
    ->condition('name', $new_profile, '=')
    ->execute();
  }

  if ($old_profile) {
    //@TODO: Add check to see if new profile was enabled
    //disable the old profile if possible
    $old_status = db_query('SELECT status FROM {system} WHERE name = :name', array(':name' => $old_profile))->fetchField();

    if ($old_status) {

      $old_profile_deactivated = db_update('system') // Table name no longer needs {}
			->fields(array(
        'status' => 0,
      ))
			->condition('name', $old_profile, '=')
			->execute();
    }

    backdrop_set_message(t('@new_profile was enabled.  @old_profile was disabled.', array('@new_profile' => $new_profile, '@old_profile' => $old_profile)));
  }
  else {
    backdrop_set_message(t('@new_profile was re-enabled.', array('@new_profile' => $new_profile)));
  }
}
